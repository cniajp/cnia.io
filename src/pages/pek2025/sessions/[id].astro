---
import { Image } from 'astro:assets';
import axios from 'axios';

import Layout from '../../../layouts/pek2025/PageLayout.astro';
import type { ForteeTag } from '../../../types';
import SocialShare from '../../../components/common/SocialShare.astro';
import { fetchTags } from '../../../utils/fetchTags';
import { getForteeApiUrl, getAffiliation, getJobTitle, getSpeakerProfile, getTalkAbstract } from '../../../utils/fortee';
import { type PEKProposalList } from '../../../types';

export async function getStaticPaths() {
  const { data } = await axios.get<PEKProposalList>(
    getForteeApiUrl(2025)
  );
  const sessionsList = data.proposals;
  return sessionsList
    // プロポーザル募集中はコメントアウト
    // .filter((session) => session.accepted === true)
    .map((session) => ({
      params: { id: session.uuid.toString() },
      props: { session },
    }));
}

const { session } = Astro.props;
const sessionExists = session !== undefined;

const avatarUrl = session?.speaker.avatar_url;
const relativeImagePath = avatarUrl?.startsWith('https://') ? avatarUrl : `/pek_trademark.png`;

const url = session?.url ?? '';

let tags: ForteeTag[] = [];
async function loadTags() {
  return await fetchTags(url);
}
tags = await loadTags();

// tagsの0番目をカテゴリとして使用、残りをタグとして使用
const categoryTag = tags.length > 0 ? tags[0] : null;
const categoryText = categoryTag ? categoryTag.text.replace(/\s*[(（].*?[)）]\s*/g, '').trim() : "技術セッション";
const displayTags = tags.length > 1 ? tags.slice(1) : [];

// 会社名/所属団体名
const affiliation = getAffiliation(session.speaker.kana);
// 役職
const jobTitle = getJobTitle(session.speaker.kana);

// スピーカープロフィール
const speakerProfile = getSpeakerProfile(session.abstract);
// トーク概要
const talkAbstract = getTalkAbstract(session.abstract);
---

<Layout
  meta={{
    title: sessionExists ? session.title : 'セッションが見つかりませんでした',
    description: sessionExists ? talkAbstract : 'セッションの概要が見つかりませんでした',
  }}
>
  <div class="min-h-screen bg-gradient-to-b from-pek2025-primary-50 to-white">
    <header class="container mx-auto py-6 px-4">
      <div class="flex items-center gap-4">
        <a href="/pek2025/sessions" class="flex items-center gap-2 text-pek2025-primary-600 hover:text-pek2025-primary-700 transition-colors">
          <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          セッション一覧に戻る
        </a>
      </div>
    </header>

    <main class="container mx-auto px-4 py-8">
      {sessionExists && (
        <div class="max-w-4xl mx-auto">

          <h1 class="text-3xl md:text-4xl font-bold text-pek2025-primary-700 mb-6">{session.title}</h1>

          <div class="bg-white rounded-xl shadow-sm border border-pek2025-border p-6 mb-8">
            <div class="flex items-center gap-4 mb-6">

              <div>
                <div class="flex items-center gap-2 mb-4">
                  <div class="">
                    <Image
                      src={relativeImagePath}
                      alt={`${session.speaker.name}のアイコン`}
                      class="rounded-full border-2 border-pek2025-border"
                      width={100}
                      height={100}
                    />
                  </div>
                  <div class="">
                    <div class="flex items-center gap-2">
                      <h2 class="text-xl font-bold text-pek2025-foreground">{session.speaker.name}</h2>
                      {(
                        session.speaker.twitter && (
                          <a href={`https://twitter.com/${session.speaker.twitter}`} target="_blank" rel="noopener noreferrer" class="text-pek2025-muted-foreground hover:text-pek2025-foreground transition-colors">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" viewBox="0 0 24 24">
                              <path fill="currentColor" d="M18.205 2.25h3.308l-7.227 8.26l8.502 11.24H16.13l-5.214-6.817L4.95 21.75H1.64l7.73-8.835L1.215 2.25H8.04l4.713 6.231zm-1.161 17.52h1.833L7.045 4.126H5.078z"/>
                            </svg>
                          </a>
                        )
                      )}
                    </div>
                    <div>
                      <p class="text-pek2025-muted-foreground">{affiliation}</p>
                      {jobTitle && <p class="text-sm text-pek2025-muted-foreground">{jobTitle}</p>}
                    </div>
                  </div>
                </div>

                <p class="text-sm text-pek2025-muted-foreground mt-1">{speakerProfile}</p>
              </div>
            </div>

            <div class="border-t border-pek2025-border pt-6">
              {categoryTag && (
                <div class="mb-4 flex items-center gap-2 flex-wrap">
                  <span
                    class="px-2 py-1 rounded text-sm font-medium"
                    style={`background-color: ${categoryTag.backgroundColor}; color: ${categoryTag.color}; border: 1px solid ${categoryTag.color}30;`}
                  >
                    {categoryText}
                  </span>
                </div>
              )}
              <div class="space-y-6">
                <div>
                  <h3 class="text-lg font-semibold text-pek2025-foreground mb-2">セッション概要</h3>
                  <p class="text-pek2025-foreground whitespace-pre-line">{talkAbstract}</p>
                </div>
                <div>
                  <h3 class="text-lg font-semibold text-pek2025-foreground mb-2">キーワード</h3>
                  <div class="flex flex-wrap gap-2">
                    {displayTags.map((tag) => {
                      const processedText = tag.text.trim();
                      return (
                        <span
                          class="px-2 py-1 rounded text-sm border"
                          style={`background-color: ${tag.backgroundColor}; color: ${tag.color}; border-color: ${tag.color}30;`}
                        >
                          {processedText}
                        </span>
                      );
                    })}
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div class="flex justify-between items-center">
            <div></div>
            <SocialShare
              url={Astro.request.url}
              text={session.title}
              class="text-pek2025-muted-foreground"
            />
          </div>
        </div>
      )}
    </main>
  </div>
</Layout>
