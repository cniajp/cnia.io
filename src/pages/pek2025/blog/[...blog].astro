---
import type { ImageMetadata } from 'astro';
import Layout from '~/layouts/pek2025/PageLayout.astro';
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
  const blogEntries = await getCollection('pek2025-blog', ({ data }) => {
    return data.draft !== true;
  });
  return blogEntries.map((post) => ({
    params: { blog: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
const teamMemberImages = import.meta.glob<{ default: ImageMetadata }>(
  '~/assets/images/pek2025/teamMembers/*.{jpeg,jpg,png,gif}'
);
if (post.data.author?.icon && !teamMemberImages[post.data.author.icon]) {
  throw new Error(`Author image "${post.data.author.icon}" not found in ~/assets/images/pek2025/teamMembers/`);
}
---

<Layout
  meta={{
    title: post.data.title,
    description: post.data.description,
    imagePath: post.data.image,
  }}
>
  <div class="pek2025-page bg-gradient-to-b from-pek2025-primary-50 to-white min-h-screen">
    <article class="container mx-auto px-4 py-16">
      <div class="max-w-4xl mx-auto">
        <div class="bg-white rounded-xl shadow-sm border border-pek2025-border overflow-hidden">
          {
            post.data.image && (
              <div class="aspect-video overflow-hidden">
                <Image
                  src={post.data.image}
                  class="p-4 w-full h-full object-cover"
                  alt={post.data.description || ''}
                  width={1200}
                  height={675}
                />
              </div>
            )
          }

          <div class="p-8 md:p-12">
            <header class="mb-8">
              <h1 class="text-3xl md:text-4xl font-bold text-pek2025-primary-600 mb-6 leading-tight">
                {post.data.title}
              </h1>

              <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-6">
                <div class="flex flex-col gap-2">
                  <time class="text-sm text-gray-500">
                    公開日: {
                      new Date(post.data.publishDate).toLocaleDateString('ja-JP', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                      })
                    }
                  </time>
                  {
                    post.data.author && (
                      <div class="flex items-center gap-3">
                        {post.data.author.icon && (
                          <Image
                            class="w-8 h-8 rounded-full border-2 border-pek2025-primary-100"
                            src={teamMemberImages[post.data.author.icon]()}
                            alt={`${post.data.author.name}のアイコン`}
                            width={32}
                            height={32}
                          />
                        )}
                        <span class="text-sm font-medium text-gray-700">著者: {post.data.author.name}</span>
                      </div>
                    )
                  }
                </div>

                <div class="flex flex-wrap items-center gap-2">
                  {
                    post.data.category && (
                      <span class="bg-pek2025-primary-100 text-pek2025-primary-700 px-3 py-1 rounded-full font-medium text-sm">
                        {post.data.category}
                      </span>
                    )
                  }
                  {
                    post.data.tags &&
                      post.data.tags.map((tag, i) => {
                        const tagColors = [
                          'bg-pek2025-secondary-100 text-pek2025-secondary-700',
                          'bg-pek2025-accent-100 text-pek2025-accent-700',
                          'bg-pek2025-primary-100 text-pek2025-primary-700',
                        ];
                        const colorClass = tagColors[i % 3];
                        return <span class={`px-3 py-1 rounded-full font-medium text-sm ${colorClass}`}>{tag}</span>;
                      })
                  }
                </div>
              </div>

              <div class="h-px bg-gradient-to-r from-pek2025-primary-200 via-pek2025-primary-100 to-transparent"></div>
            </header>

            <div
              class="prose prose-lg max-w-none prose-headings:text-pek2025-primary-700 prose-headings:font-bold prose-a:text-pek2025-primary-600 prose-a:no-underline hover:prose-a:underline prose-img:rounded-lg prose-img:shadow-md prose-code:text-gray-200 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-code:text-sm prose-pre:bg-gray-900 prose-pre:text-gray-100 prose-pre:border prose-pre:border-gray-700 prose-code:bg-gray-800"
            >
              <Content />
            </div>
          </div>
        </div>

        <div class="mt-8 text-center">
          <a
            href="/pek2025/blog"
            class="inline-flex items-center text-pek2025-primary-600 hover:text-pek2025-primary-700 font-medium transition-colors"
          >
            <svg class="mr-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            ブログ一覧に戻る
          </a>
        </div>
      </div>
    </article>
  </div>
</Layout>
