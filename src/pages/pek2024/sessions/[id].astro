---
import { Image } from 'astro:assets';
import axios from 'axios';

import Layout from '../../../layouts/pek2024/PageLayout.astro';
import { type Tag } from '../../../components/pek2024/SessionInfo.astro';
import SocialShare from '../../../components/common/SocialShare.astro';
import { fetchTags } from '../../../utils/fetchTags';
import { getAffiliation, getJobTitle, getSpeakerProfile, getTalkAbstract } from '../../../utils/pek2024/fortee';
import { type PEK2024ProposalList } from '../../../types';

export async function getStaticPaths() {
  const { data } = await axios.get<PEK2024ProposalList>(
    'https://fortee.jp/platform-engineering-kaigi-2024/api/proposals'
  );
  const sessionsList = data.proposals;
  return sessionsList
    .filter((session) => session.accepted === true)
    .map((session) => ({
      params: { id: session.uuid.toString() },
      props: { session },
    }));
}

const { session } = Astro.props;
const sessionExists = session !== undefined;

const avatarUrl = session?.speaker.avatar_url;
const relativeImagePath = avatarUrl?.startsWith('https://') ? avatarUrl : `/pek2024_trademark.png`;

const url = session?.url ?? '';

let tags: Tag[] = [];
async function loadTags() {
  return await fetchTags(url);
}
tags = await loadTags();

// 会社名/所属団体名
const affiliation = getAffiliation(session);
// 役職
const jobTitle = getJobTitle(session);

// スピーカープロフィール
const speakerProfile = getSpeakerProfile(session);
// トーク概要
const talkAbstract = getTalkAbstract(session);
---

<Layout
  meta={{
    title: sessionExists ? session.title : 'セッションが見つかりませんでした',
    description: sessionExists ? talkAbstract : 'セッションの概要が見つかりませんでした',
  }}
>
  <main>
    {
      sessionExists && (
        <div>
          <div class="mt-14 mb-10 text-left max-w-3xl mx-auto px-4">
            <h2 class="text-2xl md:text-3xl font-bold leading-tight tracking-tight">{session.title}</h2>

            <div class="flex flex-wrap items-center mt-2">
              {tags.map((tag) => {
                // 全角と半角のカッコとその中身を除去
                const processedText = tag.text.trim();
                return (
                  <p
                    class="px-1.5 py-0.5 mr-2 mb-2 rounded"
                    style={`font-size: 14px; background-color: ${tag.backgroundColor}; color: ${tag.color};`}
                  >
                    {processedText}
                  </p>
                );
              })}
            </div>

            {'videoUrl' in session && session.videoUrl && (
              <div class="relative flex flex-col min-w-0 break-words w-full mb-2">
                <div class="px-4 pt-5 flex-auto">
                  <div class="text-sm">登壇動画</div>
                  <div>
                    <iframe
                      class="aspect-video min-w-2xl w-full static bottom-0"
                      src={(session.videoUrl ?? '').toString()}
                      title="YouTube video player"
                      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                      allowfullscreen
                    />
                  </div>
                </div>
              </div>
            )}

            {'documentUrl' in session && session.documentUrl && (
              <div class="relative flex flex-col min-w-0 break-words w-full mb-2">
                <div class="px-4 pt-5 flex-auto">
                  <div class="text-sm">登壇資料</div>
                  <div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
                    <iframe
                      style="position: absolute; top:0; left: 0; width: 100%; height: 100%; border:0;"
                      src={(session.documentUrl ?? '').toString()}
                      title="Document viewer"
                      allowfullscreen
                    />
                  </div>
                </div>
              </div>
            )}

            <div class="mt-4">
              <p class="text-lg font-bold mb-2">Abstract</p>
              <p class="text-md whitespace-pre-line">{talkAbstract}</p>
            </div>

            <div class="bg-gray-100 rounded-lg mt-6">
              <div class="p-4">
                <div class="flex items-center">
                  <Image
                    src={relativeImagePath}
                    alt={`${session.speaker.name}のアイコン`}
                    style={{ borderRadius: '50%' }}
                    width={80}
                    height={80}
                  />

                  <div class="ml-2">
                    <div class="flex items-center">
                      <h3 class="text-lg font-bold mr-2">{session.speaker.name}</h3>
                      {session.speaker.name === 'Manuel Pais' ? (
                        <a href="https://www.linkedin.com/in/manuelpais/" target="_blank" rel="noopener noreferrer">
                          <div class="flex items-center ml-2">
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              class="w-4 h-4 text-gray-500 hover:text-black"
                              viewBox="0 0 24 24"
                            >
                              <path
                                fill="currentColor"
                                d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037c-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85c3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433a2.062 2.062 0 0 1-2.063-2.065a2.064 2.064 0 1 1 2.063 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"
                              />
                            </svg>
                            <span class="ml-1">manuelpais</span>
                          </div>
                        </a>
                      ) : (
                        session.speaker.twitter && (
                          <a
                            href={`https://twitter.com/${session.speaker.twitter}`}
                            target="_blank"
                            rel="noopener noreferrer"
                          >
                            <div class="flex items-center ml-2">
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                class="w-4 h-4 text-gray-500 hover:text-black"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  fill="currentColor"
                                  d="M18.205 2.25h3.308l-7.227 8.26l8.502 11.24H16.13l-5.214-6.817L4.95 21.75H1.64l7.73-8.835L1.215 2.25H8.04l4.713 6.231zm-1.161 17.52h1.833L7.045 4.126H5.078z"
                                />
                              </svg>
                              <span class="ml-1">{session.speaker.twitter}</span>
                            </div>
                          </a>
                        )
                      )}
                    </div>
                    <p class="text-xs">{affiliation}</p>
                    <p class="text-xs">{jobTitle}</p>
                  </div>
                </div>
                <p class="mt-2 text-sm whitespace-pre-line">{speakerProfile}</p>{' '}
              </div>
            </div>

            <SocialShare
              url={Astro.request.url}
              text={session.title}
              class="mt-4 sm:mt-6 align-middle text-gray-500 dark:text-slate-600 text-right"
            />
          </div>
        </div>
      )
    }
  </main>
</Layout>
