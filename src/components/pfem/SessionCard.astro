---
interface Session {
  title: string;
  description: string | undefined;
  eventName: string;
  eventDate: string;
  category: string | undefined;
  tags: Array<string> | undefined;
  image: string;
  path: string;
  name: string;
  company: string;
}
export interface Props {
  session: Session;
}
const { session } = Astro.props;
---

<a
  rel="noopener noreferrer"
  href={session.path}
  class="max-w-sm mx-auto group hover:no-underline focus:no-underline bg-gray-100 rounded"
>
  <img role="presentation" class="object-cover w-full rounded h-44" src={session.image} alt={session.title} />
  <div class="p-6 space-y-2">
    <h3 class="text-2xl font-semibold group-hover:underline group-focus:underline">{session.title}</h3>
    <span class="text-xs">{session.eventDate} {session.eventName}</span>
    {
      session.category && (
        <div class="flex flex-wrap">
          <span class="text-xs text-slate-100 font-semibold bg-primary rounded px-2 py-1 mr-1 mb-1">
            {session.category}
          </span>
        </div>
      )
    }
    {
      session.tags && (
        <div class="flex flex-wrap">
          {session.tags.map((tag) => (
            <span class="text-xs text-slate-100 font-medium bg-secondary rounded-full px-2 py-1 mr-1 mb-1">{tag}</span>
          ))}
        </div>
      )
    }
    <div class="my-4">
      <p class="text-sm font-semibold text-slate-800">
        {session.name}
      </p>
      <p class="text-sm text-slate-500">
        {session.company}
      </p>
    </div>
    {session.description && <p>{session.description.slice(0, 140)}</p>}
  </div>
</a>
